[1mdiff --git a/jaseci_core/jaseci/jac/interpreter/interp.py b/jaseci_core/jaseci/jac/interpreter/interp.py[m
[1mindex b0c446b4..646b2d04 100644[m
[1m--- a/jaseci_core/jaseci/jac/interpreter/interp.py[m
[1m+++ b/jaseci_core/jaseci/jac/interpreter/interp.py[m
[36m@@ -907,7 +907,8 @@[m [mclass Interp(VirtualMachine):[m
         arch_built_in: any_type;[m
         """[m
         kid = self.set_cur_ast(jac_ast)[m
[31m-        typ = self.run_any_type(kid[0])[m
[32m+[m[32m        self.run_any_type(kid[0])[m
[32m+[m[32m        typ = self.pop()[m
         if typ.value == Edge:[m
             if isinstance(atom_res.value, Node):[m
                 return JacValue([m
[36m@@ -1670,23 +1671,23 @@[m [mclass Interp(VirtualMachine):[m
         """[m
         kid = self.set_cur_ast(jac_ast)[m
         if kid[0].name == "TYP_STRING":[m
[31m-            return JacValue(self, value=str)[m
[32m+[m[32m            self.push(JacValue(self, value=str))[m
         elif kid[0].name == "TYP_INT":[m
[31m-            return JacValue(self, value=int)[m
[32m+[m[32m            self.push(JacValue(self, value=int))[m
         elif kid[0].name == "TYP_FLOAT":[m
[31m-            return JacValue(self, value=float)[m
[32m+[m[32m            self.push(JacValue(self, value=float))[m
         elif kid[0].name == "TYP_LIST":[m
[31m-            return JacValue(self, value=list)[m
[32m+[m[32m            self.push(JacValue(self, value=list))[m
         elif kid[0].name == "TYP_DICT":[m
[31m-            return JacValue(self, value=dict)[m
[32m+[m[32m            self.push(JacValue(self, value=dict))[m
         elif kid[0].name == "TYP_BOOL":[m
[31m-            return JacValue(self, value=bool)[m
[32m+[m[32m            self.push(JacValue(self, value=bool))[m
         elif kid[0].name == "KW_NODE":[m
[31m-            return JacValue(self, value=Node)[m
[32m+[m[32m            self.push(JacValue(self, value=Node))[m
         elif kid[0].name == "KW_EDGE":[m
[31m-            return JacValue(self, value=Edge)[m
[32m+[m[32m            self.push(JacValue(self, value=Edge))[m
         elif kid[0].name == "KW_TYPE":[m
[31m-            return JacValue(self, value=type)[m
[32m+[m[32m            self.push(JacValue(self, value=type))[m
         else:[m
             self.rt_error("Unrecognized type", kid[0])[m
 [m
